meta<-read.csv("chamber.notes.all.csv",header=T)
meta$start.date.time<-as.POSIXct(paste(meta$date, meta$start.time),format="%m-%d-%Y %H:%M:%S",tz="")
meta$end.date.time<-as.POSIXct(paste(meta$date, meta$end.time),format="%m-%d-%Y %H:%M:%S",tz="")
meta$end.date.time<-meta$end.date.time+(60*6)
meta$start.date.time<-meta$start.date.time-(60*6)
## SUBSET
## Subset the main data file based on incubation time and experiment
subdat.DIC<-list()
for(i in 1:length(meta$level)){
subdat.DIC[[i]]<-subset(sco2.data, date.time>meta$start.date.time[i]  & date.time< meta$end.date.time[i])
subdat.DIC[[i]]$samplenum <-i
}
subdat.DIC <- bind_rows(subdat.DIC)
## Calculate the difference in time for each experiment
sco2.timediff<-NA
for (i in 1:length(meta$level)){
sco2.timediff[i]<-as.double(difftime(meta$end.date.time[i], meta$start.date.time[i], units="min"))
}
## Add time since each experiment started in minutes
subdat.DIC$time.since<-NA
for(i in 1:length(meta$level)){
time.sin<-as.numeric(seq(from=0, to=round(sco2.timediff[i]),by=5))
subdat.DIC[subdat.DIC$samplenum==i,]$time.since<-time.sin[1:length(subdat.DIC[subdat.DIC$samplenum==i,]$date)]
}
## QA/QC every sample
## Look at time series traces plotted over original data
## and decide on new Reset time if necessary
sub<-subset(subdat.DIC, samplenum==1|samplenum==2 |samplenum==3|samplenum==4|samplenum==5|samplenum==6)
ggplot(subdat.DIC, aes(time.since, CO2.ppmv))+
geom_point()+
geom_smooth(method='lm', formula= y~x)+
facet_wrap(~samplenum, ncol=4, scales = "free")
subdat.DIC %>%
filter(treatment=='vel', level==1) %>%
ggplot(aes(time.since, DIC.uM)) %.>%
geom_point() %.>%
geom_smooth(method='lm', formula= y~x) %.>%
facet_wrap(metab~date,  scales = "free")
##Remove obviously bad data points
subdat.DIC$DIC.uM[c(45,50,59,60,76,85,92,93,98,111,133:135,156,160,163,250,259)]<-NA
#Replot
ggplot(subdat.DIC, aes(time.since, DIC.uM))+
geom_point()+
geom_smooth(method='lm', formula= y~x)+
facet_wrap(~samplenum, ncol=4, scales = "free")
##Add metadata
subdat.DIC<- full_join(meta,subdat.DIC)
##Calculate the slope for each experiment
slope.DIC<-
subdat.DIC %>%
group_by(samplenum) %>%
do({
mod = lm(DIC.uM~ time.since , data = .)
data.frame(DIC.uM.slope = coef(mod)[2])
})
##Calculate the slope for each experiment
slope.CO2<-
subdat.DIC %>%
group_by(samplenum) %>%
do({
mod = lm(CO2.ppmv~ time.since , data = .)
data.frame(CO2.ppmv.slope = coef(mod)[2])
})
##Join slopes to final data object
meta.final<- full_join(meta,slope.DIC)
meta.final<- full_join(meta.final,slope.CO2)
subdat.DO<-list()
for(i in 1:length(meta$level)){
subdat.DO[[i]]<-subset(o2.data, date.time>meta$start.date.time[i] & o2.data$date.time< meta$end.date.time[i])
subdat.DO[[i]]$samplenum <-i
}
subdat.DO <- bind_rows(subdat.DO)
## Calculate the difference in time for each experiment
o2.timediff<-NA
for (i in 1:length(meta$level)){
o2.timediff[i]<-as.double(difftime(meta$end.date.time[i], meta$start.date.time[i], units="min"))
}
## Add time since each experiment started in minutes
subdat.DO$time.since<-NA
for(i in 1:length(meta$level)){
time.sin<-as.numeric(seq(from=0, to=round(o2.timediff[i]),by=0.5))
subdat.DO[subdat.DO$samplenum==i,]$time.since<-time.sin[1:length(subdat.DO[subdat.DO$samplenum==i,]$date)]
}
## QA/QC every sample
## Look at time series traces plotted over original data
## and decide on new Reset time if necessary
ggplot(subdat.DO, aes(time.since, odo.uM))+
geom_point()+
geom_smooth(method='lm', formula= y~x)+
facet_wrap(~samplenum, ncol=4,scales='free')
##Remove obviously bad data points
subdat.DO$odo.uM[c(1158:1198)]<-NA
##Replot
ggplot(subdat.DO, aes(time.since, odo.sat))+
geom_point()+
geom_smooth(method='lm', formula= y~x)+
facet_wrap(~samplenum, ncol=4,scales='free')
##Add metadata
subdat.DO<- full_join(meta,subdat.DO)
##Calculate the slope for each experiment
slope<-
subdat.DO %>%
group_by(samplenum) %>%
do({
mod = lm(odo.uM~ time.since , data = .)
data.frame(odo.uM.slope = coef(mod)[2])
})
##Calculate the slope for each experiment
o2.sat.mean<-
subdat.DO %>%
group_by(samplenum) %>%
summarise(mean.sat=mean(odo.sat))
o2.sat.max<-
subdat.DO %>%
group_by(samplenum) %>%
summarise(max.sat=max(odo.sat))
##Join to meta file
meta.final<- full_join(meta.final,slope)
meta.final<- full_join(meta.final,o2.sat.mean)
meta.final<- full_join(meta.final,o2.sat.max)
#meta.final$DIC.uM.slope[3]<-0.15##average of other two dark delta DIC
PQ.DIC<-NA
#Add ER with NEP to make GPP
PQ.DIC[1]<-meta.final$DIC.uM.slope[2]-meta.final$DIC.uM.slope[1]
PQ.DIC[2]<-meta.final$DIC.uM.slope[4]-meta.final$DIC.uM.slope[3]
PQ.DIC[3]<-meta.final$DIC.uM.slope[6]-meta.final$DIC.uM.slope[5]
PQ.DIC[4]<-meta.final$DIC.uM.slope[8]-meta.final$DIC.uM.slope[7]
PQ.DIC[5]<-meta.final$DIC.uM.slope[10]-meta.final$DIC.uM.slope[9]#bad
PQ.DIC[6]<-meta.final$DIC.uM.slope[12]-meta.final$DIC.uM.slope[11]#bad
PQ.DIC[7]<-meta.final$DIC.uM.slope[14]-meta.final$DIC.uM.slope[13]#bad
PQ.DIC[8]<-meta.final$DIC.uM.slope[16]-meta.final$DIC.uM.slope[15]#bad
PQ.DIC[9]<-meta.final$DIC.uM.slope[18]-meta.final$DIC.uM.slope[17]
PQ.DIC[10]<-meta.final$DIC.uM.slope[20]-meta.final$DIC.uM.slope[19]
PQ.DIC[11]<-meta.final$DIC.uM.slope[22]-meta.final$DIC.uM.slope[21]
PQ.DIC[12]<-meta.final$DIC.uM.slope[24]-meta.final$DIC.uM.slope[23]
PQ.DIC[13]<-meta.final$DIC.uM.slope[26]-meta.final$DIC.uM.slope[25]
PQ.DIC[14]<-meta.final$DIC.uM.slope[28]-meta.final$DIC.uM.slope[27]#bad
PQ.DIC[15]<-meta.final$DIC.uM.slope[30]-meta.final$DIC.uM.slope[29]#bad
PQ.DIC[16]<-meta.final$DIC.uM.slope[32]-meta.final$DIC.uM.slope[31]
PQ.DIC[17]<-meta.final$DIC.uM.slope[34]-meta.final$DIC.uM.slope[33]#bad
PQ.DIC[18]<-meta.final$DIC.uM.slope[36]-meta.final$DIC.uM.slope[35]#bad
PQ.CO2<-NA
#Add ER with NEP to make GPP
PQ.CO2[1]<-meta.final$CO2.ppmv.slope[2]-meta.final$CO2.ppmv.slope[1]
PQ.CO2[2]<-meta.final$CO2.ppmv.slope[4]-meta.final$CO2.ppmv.slope[3]
PQ.CO2[3]<-meta.final$CO2.ppmv.slope[6]-meta.final$CO2.ppmv.slope[5]
PQ.CO2[4]<-meta.final$CO2.ppmv.slope[8]-meta.final$CO2.ppmv.slope[7]
PQ.CO2[5]<-meta.final$CO2.ppmv.slope[10]-meta.final$CO2.ppmv.slope[9]#bad
PQ.CO2[6]<-meta.final$CO2.ppmv.slope[12]-meta.final$CO2.ppmv.slope[11]#bad
PQ.CO2[7]<-meta.final$CO2.ppmv.slope[14]-meta.final$CO2.ppmv.slope[13]#bad
PQ.CO2[8]<-meta.final$CO2.ppmv.slope[16]-meta.final$CO2.ppmv.slope[15]#bad
PQ.CO2[9]<-meta.final$CO2.ppmv.slope[18]-meta.final$CO2.ppmv.slope[17]
PQ.CO2[10]<-meta.final$CO2.ppmv.slope[20]-meta.final$CO2.ppmv.slope[19]
PQ.CO2[11]<-meta.final$CO2.ppmv.slope[22]-meta.final$CO2.ppmv.slope[21]
PQ.CO2[12]<-meta.final$CO2.ppmv.slope[24]-meta.final$CO2.ppmv.slope[23]
PQ.CO2[13]<-meta.final$CO2.ppmv.slope[26]-meta.final$CO2.ppmv.slope[25]
PQ.CO2[14]<-meta.final$CO2.ppmv.slope[28]-meta.final$CO2.ppmv.slope[27]#bad
PQ.CO2[15]<-meta.final$CO2.ppmv.slope[30]-meta.final$CO2.ppmv.slope[29]#bad
PQ.CO2[16]<-meta.final$CO2.ppmv.slope[32]-meta.final$CO2.ppmv.slope[31]
PQ.CO2[17]<-meta.final$CO2.ppmv.slope[34]-meta.final$CO2.ppmv.slope[33]#bad
PQ.CO2[18]<-meta.final$CO2.ppmv.slope[36]-meta.final$CO2.ppmv.slope[35]#bad
PQ.DO<-NA
PQ.DO[1]<-meta.final$odo.uM.slope[2]-meta.final$odo.uM.slope[1]
PQ.DO[2]<-meta.final$odo.uM.slope[4]-meta.final$odo.uM.slope[3]
PQ.DO[3]<-meta.final$odo.uM.slope[6]-meta.final$odo.uM.slope[5]
PQ.DO[4]<-meta.final$odo.uM.slope[8]-meta.final$odo.uM.slope[7]
PQ.DO[5]<-meta.final$odo.uM.slope[10]-meta.final$odo.uM.slope[9]#bad DIC
PQ.DO[6]<-meta.final$odo.uM.slope[12]-meta.final$odo.uM.slope[11]#bad DIC
PQ.DO[7]<-meta.final$odo.uM.slope[14]-meta.final$odo.uM.slope[13]#bad DIC
PQ.DO[8]<-meta.final$odo.uM.slope[16]-meta.final$odo.uM.slope[15]#bad DIC
PQ.DO[9]<-meta.final$odo.uM.slope[18]-meta.final$odo.uM.slope[17]
PQ.DO[10]<-meta.final$odo.uM.slope[20]-meta.final$odo.uM.slope[19]
PQ.DO[11]<-meta.final$odo.uM.slope[22]-meta.final$odo.uM.slope[21]
PQ.DO[12]<-meta.final$odo.uM.slope[24]-meta.final$odo.uM.slope[23]
PQ.DO[13]<-meta.final$odo.uM.slope[26]-meta.final$odo.uM.slope[25]#bad O2
PQ.DO[14]<-meta.final$odo.uM.slope[28]-meta.final$odo.uM.slope[27]#bad DIC
PQ.DO[15]<-meta.final$odo.uM.slope[30]-meta.final$odo.uM.slope[29]#bad DIC
PQ.DO[16]<-meta.final$odo.uM.slope[32]-meta.final$odo.uM.slope[31]
PQ.DO[17]<-meta.final$odo.uM.slope[34]-meta.final$odo.uM.slope[33]#bad DIC
PQ.DO[18]<-meta.final$odo.uM.slope[36]-meta.final$odo.uM.slope[35]#bad DIC
PQ<-PQ.DO/PQ.DIC
PQ.C<-PQ.DO/PQ.CO2
PQ[c(4,5,6,7,8,9,13,14,15,16,17,18)]<-NA
PQ.C[c(4,5,6,7,8,9,13,14,15,16,17,18)]<-NA
PQ.DO[c(4,5,6,7,8,9,13,14,15,16,17,18)]<-NA
PQ.DIC[c(4,5,6,7,8,9,13,14,15,16,17,18)]<-NA
abs(PQ)
abs(PQ.C)
samplenum<-seq(from=2, to=36, by=2)
abs.PQ<-as.data.frame(cbind(abs(PQ),samplenum,PQ.DO, PQ.DIC))
names(abs.PQ)<-c('PQ','samplenum', 'PQ.DO','PQ.DIC')
meta.final<- full_join(meta.final,abs.PQ)
volume<-17 #Liters
area<-0.03 #m^2
o2.mass<-32
c.mass<-12
rate<-NA
meta.final$GPP.do<-meta.final$PQ.DO*volume/area*60/1000
rate$ER.do<-subset(meta.final, metab=="dark")$odo.uM.slope*volume/area*60/1000/1000
meta.final$GPP.dic<-meta.final$PQ.DIC*volume/area*60/1000
rate$ER.dic<-subset(meta.final, metab=="dark")$DIC.uM.slope*volume/area*60/1000/1000
rate$GPP.do[c(4,5,6,7,8,9,13,14,15,16,17,18)]<-NA
rate$GPP.dic[c(4,5,6,7,8,9,13,14,15,16,17,18)]<-NA
rate$ER.do[c(4,5,6,7,8,9,13,14,15,16,17,18)]<-NA
rate$ER.dic[c(4,5,6,7,8,9,13,14,15,16,17,18)]<-NA
meta.final$GPP.dic[c(8,10,12,14,16,18,26,28,30,32,34,36)]<-NA
meta.final$GPP.do[c(8,10,12,14,16,18,26,28,30,32,34,36)]<-NA
ggplot(meta.final, aes(x=abs(GPP.dic), y=GPP.do))+
geom_point(aes(size=PQ))+
geom_abline(intercept = 0, slope = 1, linetype=2, size=1.2)+
geom_smooth(method='lm', formula= y~x,se = FALSE)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
xlim(c(0,30))+
ylim(c(0,30))+
ylab(expression(paste("GPP (",mu,"mol ", O[2]," ", m^-2," ",hr^-1 ,")")))+
xlab(expression(paste("GPP (",mu,"mol DIC " , m^-2," ",hr^-1 ,")")))
View(meta.final)
ggplot(meta.final, aes(max.sat,GPP.dic))+
geom_point(size=2)+
geom_smooth(method='lm', formula= y~x,se = FALSE)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=16,color="black"))+
theme(axis.title.y=element_text(size=16,color="black"))+
theme(axis.text.y=element_text(size=16,color="black"))+
theme(axis.text.x=element_text(size=16,color="black"))+
xlab("Max O2")+
ylab("GPP (DIC)")
ggplot(meta.final, aes(max.sat,GPP.do))+
geom_point(size=2)+
#geom_smooth(method='lm', formula= y~x,se = FALSE)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=16,color="black"))+
theme(axis.title.y=element_text(size=16,color="black"))+
theme(axis.text.y=element_text(size=16,color="black"))+
theme(axis.text.x=element_text(size=16,color="black"))+
xlab("Max O2")+
ylab("GPP (DO)")
ggplot(meta.final, aes(x=abs(GPP.dic), y=GPP.do))+
geom_point(size=3)+
geom_abline(intercept = 0, slope = 1, linetype=2, size=1.2)+
geom_smooth(method='lm', formula= y~x,se = FALSE)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
xlim(c(0,30))+
ylim(c(0,30))+
ylab(expression(paste("GPP (",mu,"mol ", O[2]," ", m^-2," ",hr^-1 ,")")))+
xlab(expression(paste("GPP (",mu,"mol DIC " , m^-2," ",hr^-1 ,")")))
smaSlope <- function(x, y) {
sign <- ifelse(cor >= 0, 1, -1)
b1 <- sign * sd(y)/sd(x)
b1
}
smaIntercept <- function(x, y) {
b1 <- smaSlope(x, y)
b0 <- mean(y) - mean(x)*b1
b0
}
smaSlope(abs(GPP.dic), GPP.do)
abs(GPP.dic)
smaSlope(abs(meta.final$GPP.dic), meta.final$GPP.do)
abs(meta.final$GPP.dic)
meta.final$GPP.do
complete.cases(meta.final)
na.omit(abs(meta.final$GPP.dic))
smaSlope(na.omit(abs(meta.final$GPP.dic)), na.omit(meta.final$GPP.do))
na.omit(abs(meta.final$GPP.dic))
x<-na.omit(abs(meta.final$GPP.dic))
y<-na.omit(meta.final$GPP.do)
smaSlope(x,y)
cor(x,y)
smaSlope <- function(x, y) {
b1 <- sd(y)/sd(x)
b1
}
smaSlope(x,y)
smaIntercept <- function(x, y) {
b1 <- smaSlope(x, y)
b0 <- mean(y) - mean(x)*b1
b0
}
smaIntercept(x,y)
lm(GPP.do~abs(GPP.dic), data=meta.final)
ggplot(meta.final, aes(x=abs(GPP.dic), y=GPP.do))+
geom_point(size=3)+
geom_abline(intercept = 0, slope = 1, linetype=2, size=1.2)+
geom_abline(intercept = 1.61, slope = 1.64, linetype=1, size=1.2, color="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
xlim(c(0,30))+
ylim(c(0,30))+
ylab(expression(paste("GPP (",mu,"mol ", O[2]," ", m^-2," ",hr^-1 ,")")))+
xlab(expression(paste("GPP (",mu,"mol DIC " , m^-2," ",hr^-1 ,")")))
p1<-ggplot(meta.final, aes(x=abs(GPP.dic), y=GPP.do))+
geom_point(size=3)+
geom_abline(intercept = 0, slope = 1, linetype=2, size=1.2)+
geom_abline(intercept = 1.61, slope = 1.64, linetype=1, size=1.2, color="blue")+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
xlim(c(0,30))+
ylim(c(0,30))+
ylab(expression(paste("GPP (",mu,"mol ", O[2]," ", m^-2," ",hr^-1 ,")")))+
xlab(expression(paste("GPP (",mu,"mol DIC " , m^-2," ",hr^-1 ,")")))
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot(width=0.5)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
ylim(c(0.4,3.5))
library(patchwork)
p1|p2
p1/p2
ggplot(meta.final, aes(y=PQ))+
geom_boxplot(width=0.2)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
ylim(c(0.4,3.5))
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot(width=0.2)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
ylim(c(0.4,3.5))
p1/p2
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot(width=0.2)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
ylim(c(0.4,3.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p1/p2
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot(width=5)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
ylim(c(0.4,3.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p1/p2
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot(width=0.00001)+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
ylim(c(0.4,3.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p1/p2
p1/p2
p1|p2
p1|p2+
plot_layout(widths = c(2, 1), heights = unit(c(5, 1), c('cm', 'null')))
p1|p2+
plot_layout(widths = c(2,1), c('cm', 'null')))
p1|p2+
plot_layout(widths = c(2,1), c('cm', 'null'))
p1|p2+
plot_layout(widths = c(2,1), c('cm', 'null'))
p1|p2+
plot_layout(widths = c(2,1), c('cm', 'null'))
p1|p2+
plot_layout(widths = c(2,1))
p1|p2
p1|p2+
plot_layout(widths = c(2))
p1+p2+
plot_layout(widths = c(2))
p1+p2+
plot_layout(widths = c(2,1))
p1+p2+
plot_layout(widths = c(3,1))
ggplot(meta.final, aes(y=PQ))+
geom_boxplot(width=0.5/length(unique()))+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
ylim(c(0.4,3.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
ylim(c(0.4,3.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p1+p2+
plot_layout(widths = c(3,1))
ggplot(meta.final, aes(y=PQ))+
geom_boxplot()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
scale_y_continuous(limits=c(0,3.5), breaks=seq(from=.5, to=3.5, by=.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"))+
scale_y_continuous(limits=c(0,3.5), breaks=seq(from=0, to=3.5, by=.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p1+p2+
plot_layout(widths = c(3,1))
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"),
ticks.x=element_blank())+
scale_y_continuous(limits=c(0,3.5), breaks=seq(from=0, to=3.5, by=.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p1+p2+
plot_layout(widths = c(3,1))
p2<-ggplot(meta.final, aes(y=PQ))+
geom_boxplot()+
theme_bw()+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.title.x=element_text(size=18,color="black"))+
theme(axis.title.y=element_text(size=18,color="black"))+
theme(axis.text.y=element_text(size=18,color="black"))+
theme(axis.text.x=element_text(size=18,color="black"),
axis.ticks.x=element_blank())+
scale_y_continuous(limits=c(0,3.5), breaks=seq(from=0, to=3.5, by=.5))+
theme(axis.text.x=element_blank())+
theme(axis.title.x=element_blank())
p1+p2+
plot_layout(widths = c(3,1))
grDevices::cairo_pdf
grDevices::cairo_pdf("chamber_data.pdf")
p1+p2+
plot_layout(widths = c(3,1))
dev.off()
grDevices::cairo_pdf("chamber_data.pdf")
print(p1+p2+
plot_layout(widths = c(3,1)))
dev.off()
graph<-p1+p2+plot_layout(widths = c(3,1))
print(graph)
grDevices::cairo_pdf("chamber_data.pdf")
print(graph)
dev.off()
graph<-p1+p2+plot_layout(widths = c(3,1))
grDevices::cairo_pdf("chamber_data.pdf")
print(graph)
dev.off()
graph<-p1+p2+plot_layout(widths = c(3,1))
grDevices::cairo_pdf("chamber_data.pdf")
print(graph)
dev.off()
dev.new()
grDevices::cairo_pdf("chamber_data.pdf")
print(graph)
dev.off()
setwd("~/GitHub/metabolism-PQ")
graph<-p1+p2+plot_layout(widths = c(3,1))
dev.new()
grDevices::cairo_pdf("chamber_data.pdf")
print(graph)
dev.off()
graph<-p1+p2+plot_layout(widths = c(3,1))
dev.new()
dev.off()
graph<-p1+p2+plot_layout(widths = c(3,1))
grDevices::cairo_pdf("chamber_data.pdf", width = 6.5, height = 4,)
print(graph)
dev.off()
dev.new()
grDevices::cairo_pdf("chamber_data.pdf", width = 6.5, height = 4,)
print(graph)
dev.off()
